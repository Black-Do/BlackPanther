#include <iostream>
using namespace std;

class Publication {
public:
    string title;
    float price;

    // Constructor for Publication
    Publication(string title, float price) {
        this->title = title;
        this->price = price;
    }
};

class Book : public Publication {
public:
    int page_count;

    // Constructor for Book
    Book(string title, float price, int page_count) : Publication(title, price) {
        this->page_count = page_count;
    }

    // Function to print the Book details
    void print_data() {
        cout << string(20, '-') << endl;
        cout << "Title = " << title << endl;
        cout << "Price = " << price << endl;
        cout << "Page Count = " << page_count << endl;
        cout << string(20, '-') << endl;
    }
};

class Tape : public Publication {
public:
    float playing_time;

    // Constructor for Tape
    Tape(string title, float price, float playing_time) : Publication(title, price) {
        this->playing_time = playing_time;
    }

    // Function to print the Tape details
    void print_data() {
        cout << string(20, '-') << endl;
        cout << "Title = " << title << endl;
        cout << "Price = " << price << endl;
        cout << "Playing Time = " << playing_time << " minutes" << endl;
        cout << string(20, '-') << endl;
    }
};

int main() {
    string title;
    float price;
    int page_count;
    float playing_time;

    // Taking input for Book
    cout << "Enter details for Book:" << endl;
    cout << "Title: "<<endl;
      // To clear any leftover newline character
    getline(cin, title);
    cout << "Price: "<<endl;
    cin >> price;
    cout << "Page Count: "<<endl;
    cin >> page_count;
	cin.ignore();

    Book b1(title, price, page_count);  // Create a Book object
    cout << "Book details:" << endl;
    b1.print_data();  // Print the Book details

    // Taking input for Tape
    cout << "\nEnter details for Tape:" << endl;
    cout << "Title: "<<endl;
      // To clear any leftover newline character
    getline(cin, title);
    cout << "Price: "<<endl;
    cin >> price;
	
    cout << "Playing Time (in minutes): "<<endl;
    cin >> playing_time;
	cin.ignore();
	

    Tape t1(title, price, playing_time);  // Create a Tape object
    cout << "Tape details:" << endl;
    t1.print_data();  // Print the Tape details

    return 0;
} 